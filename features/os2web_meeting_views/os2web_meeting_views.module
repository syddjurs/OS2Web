<?php

/**
 * @file
 * Code for the OS2Web Meeting Views feature.
 */
include_once 'os2web_meeting_views.features.inc';

function os2web_meeting_views_form_views_exposed_form_alter(&$form, &$form_state) {
  if ($form['#id'] === 'views-exposed-form-meetings-search-page') {
    $form['committee']['#options']['http://norddjurs.dk/%C3%85bne-dagsordener.4803.aspx?doshow4803=1&filtercontrol48031=5488&filtercontrol48032=5462&filtercontrol48033=&filtercontrol48034=0&searchword4803='] = 'Djurs Mad I/S';
    $form['committee']['#options']['http://www.norddjurs.dk/%C3%85bne-dagsordener.4803.aspx?doshow4803=1&filtercontrol48031=5473&filtercontrol48032=0&filtercontrol48033=&filtercontrol48034=0&searchword4803='] = 'Beredskabskommisionen';

    // Set up a validate function to forward user.
    // NOTE: Breaks Ajax form..
    $form['#validate'] = array('os2web_meeting_views_views_exposed_form_meetings_search_page_validate');
  }
}

function os2web_meeting_views_views_exposed_form_meetings_search_page_validate(&$form, &$form_state) {
  $searchtext = rawurlencode($form_state['values']['search_params']);
  if (is_numeric($form_state['values']['committee']) || $form_state['values']['committee'] === 'All') {

  }
  else {
    $options = array(
      'external' => TRUE,
      'absolute' => TRUE,
    );
    drupal_goto($form_state['values']['committee'] . $searchtext, $options);
  }
  views_exposed_form_validate($form, $form_state);
}

function os2web_meeting_views_block_info() {
  $blocks['meeting-search-block'] = array(
    'info' => 'Dagsordens søgning',
  );
  return $blocks;
}

function os2web_meeting_views_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'meeting-search-block':
      $block['subject'] = t('Search Agendas');
      $block['content'] = _os2web_meeting_views_get_exposed_filter();
      break;
  }
  return $block;
}

/**
 * Code that extracts the exposed filter for use in block
 * Adopted from: http://www.butlerraines.com/node/4
 */
function _os2web_meeting_views_get_exposed_filter() {
  //create a view object first, e. g. $view = views_get_view('myViewName');
  //then set the demanded display_id, e. g. $display_id = 'page_1';
  $view = views_get_view('meetings_search');
  $display_id = 'page';
  $view->set_display($display_id);
  $view->init_handlers(); //initialize display handlers
  $form_state = array(
    'view' => $view,
    'display' => $view->display_handler->display,
    'exposed_form_plugin' => $view->display_handler->get_plugin('exposed_form'), //exposed form plugins are used in Views 3
    'method' => 'get',
    'rerender' => TRUE,
    'no_redirect' => TRUE,
  );
  $form = drupal_build_form('views_exposed_form', $form_state); //create the filter form
  //you now have a form array which can be themed or further altered...
  $he = drupal_render($form);
  return $he;
}

/**
 * Helper function for the meetings_search view
 *
 * @param stdObject $entity
 * @access protected
 * @return void
 */
function _os2web_meeting_views_generate_search_data($entity) {
  $title = $entity->title;
  $entity_type = 'node';

//  $abbr = '';
//  if (is_array(field_get_items($entity_type, $entity, 'field_meeting_abbr')))
//    $abbr = ' '.array_pop(array_pop(field_get_items($entity_type, $entity, 'field_meeting_abbr')));

  $location = field_get_items($entity_type, $entity, 'field_location');
  if (is_array($location)){
    $location_term = taxonomy_term_load(array_pop(array_pop($location)));
    $location = ' '.$location_term->name;
  }

  $committee = field_get_items($entity_type, $entity, 'field_committee');
  if (is_array($committee)){
    $committee_term = taxonomy_term_load(array_pop(array_pop($committee)));
    $committee = ' '.$committee_term->name;
  }

  $bps = '';
  $bpoints = field_get_items($entity_type, $entity, 'field_ref_bullet_points');
  if (is_array($bpoints)){
    foreach ($bpoints as $bpoint) {
      $node = node_load($bpoint['target_id']);
      $text = strip_tags(check_markup($node->title,'plain_text'));
      $bps .= ' '.$text;

      $bpas = field_get_items($entity_type, $node, 'field_ref_attachment');
      if (is_array($bpas)){
        foreach ($bpas as $bpa) {
          $node2 = node_load($bpa['target_id']);
          $body = field_get_items($entity_type, $node2, 'field_bpa_body');
          if (!is_array($body)) {
            $body = array(array());
          }
          $text = html_entity_decode(strip_tags(check_markup(array_pop(array_pop($body)),'filtered_html')),ENT_COMPAT | ENT_HTML401,'UTF-8');
          $text = trim(preg_replace('/[\",;:.\'\(\)]/',' ',$text));
          $text = trim(preg_replace('/\s\s+/',' ',$text));
          $bps .= ' '.$text;
        }
      }

    }
  }

  // Extract keywords so only relevant words are stored.
  $t = mb_split('\s+',$bps);
  $t = array_keys(array_flip($t));
  $t = array_filter($t, '_os2web_meeting_views_strip_words');
  $bps = implode(' ',$t);

  $result = $title . $location . $committee . ' ' . $bps;
  return $result;
}

/**
 * Helper function which removes common and small (<2 chars) words.
 */
function _os2web_meeting_views_strip_words($text) {
  $text = preg_replace('/^[^\w|\d|æ|ø|å]+/','',$text);
  $text = preg_replace('/[^\w|\d|æ|ø|å]+$/','',$text);
  if (strlen($text)>3) {
    return true;
  }
  else {
    return false;
  }
}
